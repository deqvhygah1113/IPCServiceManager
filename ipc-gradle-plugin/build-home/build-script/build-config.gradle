import groovy.transform.Field

@Field tag = "[build-config-gradle]";

gradle.logger.print tag,"start..."

def targetConfigs = new TargetConfigs();
targetConfigs.loadTargetConfigs(rootDir.getAbsolutePath() +"/build-home/build-config/build.properties");
gradle.ext.targetConfigs = targetConfigs;

def versionConfigs = new VersionConfigs(); 
versionConfigs.loadVersionConfigs(rootDir.getAbsolutePath() +"/build-home/build-config/versions.properties");
gradle.ext.versionConfigs = versionConfigs;


gradle.logger.print tag,"is build apn === " + versionConfigs.isBuildApn();
gradle.logger.print tag,"is build vt  === " + versionConfigs.isBuildVt();
gradle.logger.print tag,"build types === " + versionConfigs.getBuildTypes().size();

class TargetConfigs {

	def targetname;
	def targetversion;
	def targetfordername;
	def targetdeviceModel;
	def refLibCount;
	def targetPath;
	def targetType; 
	def systemApp;
	def systemSecuritySignPath;
	
	def loadTargetConfigs(def path){
	
		Properties properties = new Properties()
		File propertyFile = new File(path)
		properties.load(propertyFile.newDataInputStream())
		
		targetname = properties.getProperty('targetName')
		targetversion = properties.getProperty('targetVersion')
		targetfordername = properties.getProperty('targetForderName')
		targetdeviceModel = properties.getProperty('deviceModel')
		refLibCount = properties.getProperty('refLibCount')
		targetPath = properties.getProperty('targetPath')
		targetType = properties.getProperty('targetType')
		systemApp = properties.getProperty('systemApp')
		systemSecuritySignPath = properties.getProperty('systemSecuritySignPath')
	}
	
	def getTargetName(){
		return targetname;
	}
	
	def getTargetVersion(){
		return targetversion;
	}
	
	def getTargetForderName(){
		return targetfordername;
	}
	
	def getTargetDeviceModel(){
		return targetdeviceModel;
	}
	
	def getTargetPath(){
		return targetPath;
	}
	
	def getReferenceLibCount(){
		return refLibCount;
	}
	
	def getTargetType(){
		return targetType;
	}
	
	def isSystemApp(){
		return systemApp.equals("1");
	}
	
	def getSystemSecuritySignPath(){
		return systemSecuritySignPath;
	}

}

class VersionConfigs {
	
	def List buildTypeList = new ArrayList();
	def List deviceModelList = new ArrayList();
	
	def loadVersionConfigs(def path){
	
		Properties properties = new Properties()
		File propertyFile = new File(path)
		properties.load(propertyFile.newDataInputStream())
		
		String buildTypeStr = properties.getProperty('buildTypes')
		String deviceModelStr = properties.getProperty('deviceModel')
		
		String[] buildTypesArray = buildTypeStr.split(",");
		List<String> buildTypeListResult = Arrays.asList(buildTypesArray);
        buildTypeList.addAll(buildTypeListResult);
		
		if(deviceModelStr!=null && deviceModelStr.length() > 0){
			String[] deviceModelArray = deviceModelStr.split(",");
			List<String> deviceModelListResult = Arrays.asList(deviceModelArray);
			deviceModelList.addAll(deviceModelListResult);
		}  else {
			deviceModelList.add 'release'
		}
		
	}
	
	List getBuildTypes(){
		return buildTypeList
	}
	
	List getDeviceModels(){
		return deviceModelList
	}
	
	def isBuildApn(){
		return buildTypeList.contains("apn");
	}
	
	def isBuildVt(){
		return buildTypeList.contains("vt");
	}

}


    
